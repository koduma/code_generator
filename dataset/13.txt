//abc201_f

#include <stdio.h>

#define N	200000

int min(int a, int b) { return a < b ? a : b; }
long long max(long long a, long long b) { return a > b ? a : b; }

long long ft[N];

void update(int i, int n, long long x) {
	while (i < n) {
		ft[i] = max(ft[i], x);
		i |= i + 1;
	}
}

long long query(int i) {
	long long x = 0;

	while (i >= 0) {
		x = max(x, ft[i]);
		i &= i + 1, i--;
	}
	return x;
}

int main(){
	static int ii[N], pp[N];
	static long long aa[N], bb[N], cc[N];
	int n, i, p;
	long long sum, ans;

	scanf("%d", &n);
	for (i = 0; i < n; i++) {
		scanf("%d", &pp[i]), pp[i]--;
		ii[pp[i]] = i;
	}
	sum = 0;
	for (p = 0; p < n; p++) {
		int a, b, c;

		scanf("%d%d%d", &a, &b, &c), b = min(b, a), c = min(c, a);
		sum += a;
		aa[ii[p]] = a, bb[p] = a - b, cc[p] = a - c;
	}
	for (p = 1; p < n; p++)
		bb[p] += bb[p - 1];
	for (p = n - 2; p >= 0; p--)
		cc[p] += cc[p + 1];
	ans = 0;
	for (i = 0; i < n; i++) {
		long long x;

		update(pp[i], n, x = max(query(pp[i] - 1), pp[i] == 0 ? 0 : bb[pp[i] - 1]) + aa[i]);
		ans = max(ans, x + (pp[i] == n - 1 ? 0 : cc[pp[i] + 1]));
	}
	ans = sum - ans;
	printf("%lld\n", ans);
	return 0;
}